shiny::runApp()
library(tidyverse)
library(CodeClanData)
View(game_sales)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
class(game_sales$year_of_release)
min_slider <- prettyNum(min(game_sales$year_of_release), big.interval = 2L)
class(min_slider <- prettyNum(min(game_sales$year_of_release), big.interval = 2L) )
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
)
tabPanel("Games Filter",
sidebarLayout(
sidebarPanel(
sliderInput("year_select",
"Select years of release",
min = min_slider,
max = max_slider,
value = c(min_slider, max_slider),
sep = "",
ticks = FALSE
),
selectInput("genre_select",
"Select genre",
choices = genre_choice,
#selected = "all"
),
selectInput("platform_select",
"Select your platform",
choices = platform_choice,
#selected = "all"
),
radioButtons("rating_select",
"Select age rating",
choices = rating_choice,
inline = TRUE,
#selected = "all"
),
#actionButton("update_all",
#"Show me my Games!")
),
mainPanel(
dataTableOutput("filtered_table")
)
)
)
titlePanel(tags$h1("Gamer's Paradise",
tags$h5("Thank you for using Gamer's Paradise dashboard,
here you can browse a selection of vintage and modern games
we have in our database.
We hope this Shiny dashboard will make it easier for you to
choose your perfect game!"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/CodeClan/Codeclan_work/Live_Projects/Module_2/Week5_day4/event_reactive')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
year_select
input$year_select
runApp('/Library/Frameworks/R.framework/Versions/3.6/Resources/library/shiny/examples/05_sliders')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
? between
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
return(
ggplot(filtered_data()) +
geom_col(aes(x = name, y = critic_score)) +
facet_grid()
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shinyApp(ui = ui, server = server)
runApp('daves_app.R')
runApp()
plot_stats_long
plot_stats_long <- reactive({
game_sales %>%
pivot_longer(cols = c("sales", "critic_score", "user_score"),
names_to = "ratings/scores",
values_to = "numbers")
plot_stats_long <- reactive({
game_sales %>%
pivot_longer(cols = c("sales", "critic_score", "user_score"),
names_to = "ratings/scores",
values_to = "numbers")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot_stats_long
View(plot_stats_long)
View(plot_stats_long)
plot_stats_long
game_sales %>%
pivot_longer(cols = c("user_score", "critic_score", "sales"),
names_to = "ratings_scores",
values_to = "numbers")
game_sales %>%
pivot_longer(cols = c("user_score", "critic_score", "sales"),
names_to = "ratings_scores",
values_to = "numbers") %>%
slice(1:30)
runApp()
runApp()
game_sales %>%
pivot_longer(cols = c("user_score", "critic_score", "sales"),
names_to = "ratings_scores",
values_to = "numbers") %>%
group_by(platform) %>%
summarise(count = n()/3)
game_sales %>%
pivot_longer(cols = c("user_score", "critic_score", "sales"),
names_to = "ratings_scores",
values_to = "numbers") %>%
group_by(platform) %>%
summarise(count = n())
game_sales %>%
pivot_longer(cols = c("user_score", "critic_score", "sales"),
names_to = "ratings_scores",
values_to = "numbers") %>%
group_by(platform) %>%
summarise(count = n()/3) %>%
sort(count)
game_sales %>%
pivot_longer(cols = c("user_score", "critic_score", "sales"),
names_to = "ratings_scores",
values_to = "numbers") %>%
group_by(platform) %>%
summarise(count = n()/3) %>%
sort(count, decreasing = FALSE)
game_sales %>%
pivot_longer(cols = c("user_score", "critic_score", "sales"),
names_to = "ratings_scores",
values_to = "numbers") %>%
group_by(platform) %>%
summarise(count = n()/3)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
game_sales %>%
pivot_longer(cols = c("user_score", "critic_score", "sales"),
names_to = "ratings_scores",
values_to = "numbers") %>%
group_by(developer) %>%
summarise(count = n()/3)
runApp()
runApp()
game_sales %>%
pivot_longer(cols = c("user_score", "critic_score", "sales"),
names_to = "ratings_scores",
values_to = "numbers") %>%
group_by(year_of_release) %>%
summarise(count = n()/3)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
2016 - 1988
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
